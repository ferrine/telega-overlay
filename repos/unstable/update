#!/usr/bin/env nix-shell
#! nix-shell -i bash -p curl nix coreutils jq

# Based on https://github.com/nix-community/emacs-overlay/blob/master/repos/emacs/update
set -euxo pipefail

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
cd "$SCRIPTPATH"

function format_repo_meta() {
    owner="$1"
    repo="$2"
    rev="$3"
    sha256="$4"
    version="$5"
    printf '{"type": "github", "owner": "%s", "repo": "%s", "rev": "%s", "sha256": "%s", "version": "%s"}' \
           "$owner" "$repo" "$rev" "$sha256" "$version"
}

function update_unstable() {
    version_data="$(curl 'https://raw.githubusercontent.com/zevlg/telega.el/master/telega.el')"
    tdlib_min_version="$(echo "$version_data" | grep '(defconst telega-tdlib-min-version' | cut -d\" -f2)"
    telega_version="$(echo "$version_data" | grep '(defconst telega-version' | cut -d\" -f2)"
    telega_commit_sha="$(curl 'https://api.github.com/repos/zevlg/telega.el/commits?per_page=1' | jq -r '.[0].sha')"
    telega_digest="$(nix-prefetch-url --unpack "https://github.com/zevlg/telega.el/archive/${telega_commit_sha}.tar.gz")"
    format_repo_meta "zevlg" "telega.el" "${telega_commit_sha}" "${telega_digest}" "${telega_version}" > 'telega.json'

    tdlib_commit_sha="$(curl 'https://raw.githubusercontent.com/zevlg/telega.el/master/etc/Dockerfile' | grep 'RUN echo "TDLib' | cut -d- -f2)"
    tdlib_digest="$(nix-prefetch-url --unpack "https://github.com/tdlib/td/archive/${tdlib_commit_sha}.tar.gz")"
    format_repo_meta "tdlib" "td" "${tdlib_commit_sha}" "${tdlib_digest}" "${tdlib_min_version}" > 'tdlib.json'
}

update_unstable
